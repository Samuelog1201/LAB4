(()=>{"use strict";var t;!function(t){t.image="image",t.name="name",t.status="status",t.species="species",t.type="type",t.originname="originname",t.namefirst="namefirst"}(t||(t={}));class e extends HTMLElement{static get observedAttributes(){return Object.keys(t)}constructor(){super(),this.attachShadow({mode:"open"})}attributeChangedCallback(e,n,s){switch(e){case t.image:this.image=s;break;case t.name:this.name=s;break;case t.status:this.status=s;break;case t.species:this.species=s;break;case t.type:this.type=s;break;case t.originname:this.originname=s;break;case t.namefirst:this.namefirst=s}this.render()}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <style>\n                </style>\n                <section>\n                    <img class="image-character" src="${this.image||""}" alt="${this.name||""}">\n                    <h1>${this.name||"No name available"}</h1>\n                    <h2>Status: ${this.status||"Unknown"}</h2>\n                    <h2>Species: ${this.species||"Unknown"}</h2>\n                    <h2>Type: ${this.type||"N/A"}</h2>\n                    <h2>Origin: ${this.originname||"Unknown"}</h2>\n                    <h2>Name of first Episode : ${this.namefirst||"Unknown"}</h2>\n                </section>\n            `)}}customElements.define("my-character",e);var n=function(t,e,n,s){return new(n||(n=Promise))((function(a,i){function r(t){try{c(s.next(t))}catch(t){i(t)}}function o(t){try{c(s.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,o)}c((s=s.apply(t,e||[])).next())}))};const s=t=>n(void 0,void 0,void 0,(function*(){try{const e=yield fetch(t);return(yield e.json()).name}catch(t){return console.error("Error fetching episode:",t),"Unknown Episode"}}));var a=function(t,e,n,s){return new(n||(n=Promise))((function(a,i){function r(t){try{c(s.next(t))}catch(t){i(t)}}function o(t){try{c(s.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,o)}c((s=s.apply(t,e||[])).next())}))};class i extends HTMLElement{constructor(){var t,e;super(),this.cards=[],this.dataCharacter=[],this.attachShadow({mode:"open"});const n=document.createElement("input");n.type="number",n.placeholder="Cantidad de personajes";const s=document.createElement("button");s.innerText="Cargar personajes",s.addEventListener("click",(()=>a(this,void 0,void 0,(function*(){this.dataCharacter=[];const t=parseInt(n.value);isNaN(t)||t<=0?alert("Por favor ingresa un número válido"):yield this.loadCharacters(t)})))),null===(t=this.shadowRoot)||void 0===t||t.appendChild(n),null===(e=this.shadowRoot)||void 0===e||e.appendChild(s)}loadCharacters(e){return a(this,void 0,void 0,(function*(){const a=yield(t=>n(void 0,void 0,void 0,(function*(){try{const e=yield fetch("https://rickandmortyapi.com/api/character");return(yield e.json()).results.slice(0,t)}catch(t){return console.error(t),[]}})))(e);this.dataCharacter=a;for(const e of this.dataCharacter){const n=e.episode[0],a=yield s(n),i=this.ownerDocument.createElement("my-character");i.setAttribute(t.image,e.image),i.setAttribute(t.name,e.name),i.setAttribute(t.status,e.status),i.setAttribute(t.species,e.species),i.setAttribute(t.type,e.type||"N/A"),i.setAttribute(t.originname,e.origin.name),i.setAttribute(t.namefirst,a),this.cards.push(i)}this.render()}))}render(){this.shadowRoot&&this.cards.forEach((t=>{var e;null===(e=this.shadowRoot)||void 0===e||e.appendChild(t)}))}}customElements.define("app-container",i)})();